- name: install basic packages
  apt: pkg={{ item }} state=present update_cache=true
  with_items:
    - build-essential
    - git
    - mercurial
    - python3-dev
    - memcached
    - zsh

- name: replace memcached setup
  replace: dest=/etc/memcached.conf regexp="^-m 64"  replace="-m 256"

- name: drop default vhost
  file: path=/etc/nginx/sites-available/default state=absent

- name: empty default vhost
  file: path=/etc/nginx/sites-available/default state=touch

- name: create nginx vhosts
  template: src=sites-available/{{item.src}} dest=/etc/nginx/sites-available/{{ item.dest }}.conf
  with_items:
    - src: gist.http.conf.jinja2
      dest: "gist.{{rhodecode_domain}}.http.conf"
    - src: http.conf.jinja2
      dest: "{{rhodecode_domain}}.http.conf"
    - src: https.conf.jinja2
      dest: "{{rhodecode_domain}}.https.conf"

- name: enable nginx vhosts
  file: src=/etc/nginx/sites-available/{{ item}}.conf dest=/etc/nginx/sites-enabled/{{ item }}.conf state=link
  with_items:
    - gist.{{rhodecode_domain}}.http.conf
    - "{{rhodecode_domain}}.http.conf"
    - "{{rhodecode_domain}}.https.conf"

- name: create doc dir
  file: dest=/home/rcdev/docs state=directory

- name: template out docs
  template: src=docs/{{item.src}} dest=/home/rcdev/docs/{{ item.dest }}.conf
  with_items:
    - src: generate_ssl.txt.jinja2
      dest: generate_ssl.txt
    - src: how_to_upgrade.txt.jinja2
      dest: how_to_upgrade.txt
    - src: postgres_db_access.txt.jinja2
      dest: postgres_db_access.txt
    - src: rabbitmq_setup.rst.jinja2
      dest: rabbitmq_setup.rst
    - src: rhodecode_web_admin_access.txt.jinja2
      dest: rhodecode_web_admin_access.txt
    - src: ssh_access.txt.jinja2
      dest: ssh_access.txt
    - src: ubuntu_security_updates.txt.jinja2
      dest: ubuntu_security_updates.txt

- name: create opt dir
  file: dest=/opt/rhodecode owner=rcdev group=rcdev state=directory mode=0755

- name: test nginx
  shell: nginx -t

- name: download installer
  become_user: rcdev
  get_url: url={{rhodecode_installer_url}} dest=/home/rcdev mode=0740
  register: installer_info

- set_fact: rhodecode_installer_filepath="{{ installer_info.dest }}"

- name: run installer
  become_user: rcdev
  command: "{{rhodecode_installer_filepath}} --accept-license creates=/opt/rhodecode/store chdir=/home/rcdev"

- name: update installer
  become_user: rcdev
  command: /home/rcdev/.rccontrol-profile/bin/rccontrol self-update

- name: install VCSServer
  become_user: rcdev
  expect:
    command: /home/rcdev/.rccontrol-profile/bin/rccontrol install VCSServer host:{{vcsserver_host}} port:{{vcsserver_port}}
    responses:
      (?i)license: y
    timeout: 600

- name: install Rhodecode
  become_user: rcdev
  expect:
    command: /home/rcdev/.rccontrol-profile/bin/rccontrol install {{rhodecode_edition}} username:admin password:{{rhodecode_admin_password}} email:{{rhodecode_email}} repo_dir:{{rhodecode_repodir}} host:{{rhodecode_host}} port:{{rhodecode_port}} database:postgresql://rhodecode:{{rhodecode_pg_password}}@127.0.0.1:5432/rhodecode
    responses:
      (?i)view license text: y
      (?i)valid license key: c
    timeout: 600

- name: add systemd profile for Rhodecode
  template: src=systemd/rhodecode.conf dest=/etc/systemd/system/rhodecode.service

- name: update daemon
  command: systemctl daemon-reload

- name: enable rhodecode autostart
  command: systemctl enable rhodecode
