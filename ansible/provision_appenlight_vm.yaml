---
- hosts: "{{hosts}}"
  become: true
  vars:
    hostname: rhodecode-appenlight
    ansible_ssh_pipelining: true
    elasticsearch_ram: 1024m
    nginx_default_listen: 80
    nginx_user: www-data
    appenlight_domain: appenlight.dev
    postfix_fqdn: "{{appenlight_domain}}"
    custom_ssh_port: 9022
    appenlight_admin_password: admin #so we can gen password when invoking VM
    appenlight_pg_password: test #so we can gen password when invoking VM
    users_accounts:
      - user: appenlight
      - user: channelstream
    postgresql_users:
      - name: appenlight
        password: "{{appenlight_pg_password}}"
    postgresql_databases:
        - name: appenlight
          owner: appenlight
    nginx_certificates_self_signed:
        - "{{appenlight_domain}}"
    nginx_vhost_vhosts:
        - name: appenlight_ssl
          vhost_custom_lines:
              - limit_req_zone  $binary_remote_addr  zone=front:1m   rate=10r/s;
              - limit_req_zone  $binary_remote_addr  zone=api:1m     rate=10r/s;
          upstream_backends:
              - name: backend_appenlight
                lines:
                    - server unix:/tmp/appenlight.sock;
              - name: backend_appenlight_api
                lines:
                    - server unix:/tmp/appenlight.sock;
              - name: backend_channelstream
                lines:
                    - server 127.0.0.1:8088 weight=1 max_fails=5 fail_timeout=30s;
          server_names:
            - "{{appenlight_domain}}"
          ssl_certificate: /etc/nginx/keys/{{appenlight_domain}}.crt
          ssl_certificate_key: /etc/nginx/keys/{{appenlight_domain}}.key
          listen: 443 ssl
          server_custom_lines:
              - add_header x-frame-options "SAMEORIGIN";
              - add_header X-XSS-Protection "1; mode=block";
              - add_header X-Content-Type-Options "nosniff";
              - add_header strict-transport-security "max-age=31536000; includeSubdomains";
              - proxy_set_header Host $http_host;
              - proxy_set_header X-Real-IP $remote_addr;
              - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              - proxy_set_header X-Forwarded-Proto $scheme;
              - proxy_set_header X-Url-Scheme $scheme;
          locations:
            - name: /static
              custom_lines:
                  - alias /home/appenlight/appenlight/webassets;
            - name: /channelstream
              custom_lines:
                  - rewrite /channelstream/(.*) /$1 break;
                  - proxy_connect_timeout   10;
                  - proxy_send_timeout      10m;
                  - proxy_read_timeout      10m;
                  - tcp_nodelay             off;
                  - proxy_pass              http://backend_channelstream;
                  - gzip off;
                  - proxy_http_version 1.1;
                  - proxy_set_header Upgrade $http_upgrade;
                  - proxy_set_header Connection "upgrade";
            - name: /
              custom_lines:
                  - client_max_body_size    10m;
                  - client_body_buffer_size 512k;
                  - proxy_connect_timeout   10;
                  - proxy_send_timeout      60;
                  - proxy_read_timeout      60;
                  - keepalive_timeout 1;
                  - limit_req   zone=front  burst=10  nodelay;
                  - error_page 502 503 504 /maintenance.html;
                  - gzip on;
                  - proxy_pass http://backend_appenlight;

        - name: appenlight_non_ssl
          server_names:
            - "{{appenlight_domain}}"
          listen: 80
          server_custom_lines:
              - rewrite ^(.*) https://{{appenlight_domain}}$1 permanent;
  roles:
    - role: basic
    - role: users
    - role: nodejs
    - role: postgresql
    - role: postfix
    - role: nginx
    - role: nginx_certificates
    - role: nginx_vhost
    - role: redis
    - role: elasticsearch
    - role: channelstream
    - role: channelstream_init
    - role: appenlight
    - role: appenlight_init
